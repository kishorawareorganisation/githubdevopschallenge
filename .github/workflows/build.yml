name: .NET Core
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  DEPLOY_LOCATION: australiaeast
  TEST_RESOURCE_GROUP_NAME: testforeverything
  TEST_APP_SERVICE_PLAN_NAME: plan-test-aueast-azsprintseries
  PROD_APP_SERVICE_PLAN_NAME: plan-prod-aueast-azsprintseries
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.301
        source-url: https://nuget.pkg.github.com/BeigeBadger/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Install dependencies for all projects
      run: dotnet restore
      
    - name: Build all projects
      run: dotnet build --configuration Release --no-restore
      
    - name: Run unit tests
      run: dotnet test ${{ github.workspace }}/AnimalAdoption.Web.Portal.UnitTests/AnimalAdoption.Web.Portal.UnitTests.csproj --no-build --verbosity normal --configuration Release
    
    - name: Pack common logic project for NuGet
      run: dotnet pack AnimalAdoption.Common.Logic.csproj --configuration Release --no-build -p:PackageVersion=$PKG_VERSION
      working-directory: ${{ github.workspace }}/AnimalAdoption.Common.Logic/
      shell: bash
      env:
        PKG_VERSION: 1.0.3 
      
    - name: Publish portal project in Release mode
      run: dotnet publish  ./AnimalAdoption.Web.Portal/AnimalAdoption.Web.Portal.csproj --configuration Release --no-build --output ./taa-portal/
      
    - name: Upload a build artifact for the TAA web portal
      uses: actions/upload-artifact@v2.1.3
      with:
        name: taa-portal
        path:  ${{ github.workspace }}/taa-portal/
        if-no-files-found: error   
        
    - name: Upload a build artifact for the Bicep template
      uses: actions/upload-artifact@v2.1.3
      with:
        name: bicep-template
        path: deploy.bicep
        if-no-files-found: error
        
  release-to-dev-env:
    runs-on: ubuntu-latest
    
    needs: [ build ]
    
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    env:
      TEST_WEB_APP_NAME: wa-test-aueast-azsprintseries
      TEST_KEY_VAULT_NAME: kv-test-aueast-azsprints
    
    steps:  
    
    - name: Download the bicep-template artifact
      uses: actions/download-artifact@v2.0.5
      with:
          name: bicep-template
          path: ./bicep-template/
          

    - name: Azure Login
      uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS}}
        
    - name: Deploy resources to the Test Resource Group using an Bicep template
      uses: azure/arm-deploy@v1
      with:
          subscriptionId: 91207f96-020f-420e-a941-93a4f37ec54f
          resourceGroupName: ${{ env.TEST_RESOURCE_GROUP_NAME }}
          template: ./bicep-template/deploy.bicep
          parameters: tenantGuid=dab167d2-fdab-4ab5-a387-22f955436d0a appServicePlanName=${{ env.TEST_APP_SERVICE_PLAN_NAME }} keyVaultName=${{ env.TEST_KEY_VAULT_NAME }} webAppName=${{ env.TEST_WEB_APP_NAME }} resourceGroupServicePrincipalManagedApplicationObjectId=ca8d7d21-57e4-4962-bd37-2dc48754a9a5
          failOnStdErr: false
          
    - name: Download the TAA web portal artifact
      uses: actions/download-artifact@v2.0.5
      with:
          name: taa-portal
          path: ./taa-portal/
          
    - name: Deploy the TAA portal to the Test Web App
      uses: Azure/webapps-deploy@v2
      with:
          app-name: ${{ env.TEST_WEB_APP_NAME }}
          package: ./taa-portal/          
        
    - name: Get Secrets from Test Key Vault
      id: getSecretsFromTestKeyVault
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: ${{ env.TEST_KEY_VAULT_NAME }}
        secrets: 'GlobalPassword, SimulatedFailureChance'
        
    - name: Update the App Settings for the Test Web App
      uses: Azure/appservice-settings@v1
      with:
          app-name: ${{ env.TEST_WEB_APP_NAME }}
          app-settings-json: '[{"name": "GlobalPassword","value": "${{ steps.getSecretsFromTestKeyVault.outputs.GlobalPassword }}","slotSetting": false},{"name": "SimulatedFailureChance","value": "${{ steps.getSecretsFromTestKeyVault.outputs.SimulatedFailureChance }}","slotSetting": false}]'
          
  release-to-prod-env:
   runs-on: ubuntu-latest

   needs: [ release-to-dev-env ]

   if: github.event_name == 'push' && github.ref == 'refs/heads/master'

   env:
      PROD_RESOURCE_GROUP_NAME: rg-prod-aueast-azsprintseries
      PROD_KEY_VAULT_NAME: kv-prod-aueast-azsprints
      PROD_WEB_APP_NAME: wa-prod-aueast-azsprintseries

   steps:
      - name: Download the bicep-template artifact
        uses: actions/download-artifact@v2.0.5
        with:
          name: bicep-template
          path: ./bicep-template/

      - name: Login to Azure using the Production SP credentials
        uses: Azure/login@v1.1
        with:
          creds: ${{ secrets.azure_prod_credential }}

      - name: Deploy resources to the Test Resource Group using an Bicep template
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: 91207f96-020f-420e-a941-93a4f37ec54f
          resourceGroupName: prodforwebapp
          template: ./bicep-template/deploy.bicep
          parameters: tenantGuid=dab167d2-fdab-4ab5-a387-22f955436d0a appServicePlanName=${{ env.PROD_APP_SERVICE_PLAN_NAME }} keyVaultName=${{ env.PROD_KEY_VAULT_NAME }} webAppName=${{ env.PROD_WEB_APP_NAME }} resourceGroupServicePrincipalManagedApplicationObjectId=055147cf-3b58-4d5d-98f0-b3ddcb9b16ea
          failOnStdErr: false

      - name: Download the TAA web portal artifact
        uses: actions/download-artifact@v2.0.5
        with:
          name: taa-portal
          path: ./taa-portal/

      - name: Deploy the TAA portal to the Production Web App
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ env.PROD_WEB_APP_NAME }}
          package: ./taa-portal/

      - name: Get Secrets from the Production Key Vault
        id: getSecretsFromProductionKeyVault
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ env.PROD_KEY_VAULT_NAME }}
          secrets: 'GlobalPassword, SimulatedFailureChance'

      - name: Update the App Settings for the Production Web App
        uses: Azure/appservice-settings@v1
        with:
          app-name: ${{ env.PROD_WEB_APP_NAME }}
          app-settings-json: '[{"name": "GlobalPassword","value": "${{ steps.getSecretsFromProductionKeyVault.outputs.GlobalPassword }}","slotSetting": false},{"name": "SimulatedFailureChance","value": "${{ steps.getSecretsFromProductionKeyVault.outputs.SimulatedFailureChance }}","slotSetting": false}]'

